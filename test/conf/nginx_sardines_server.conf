upstream myApp1 {
    server srv1.example.com weight=3;
    server srv2.example.com;
    server srv3.example.com;
}

upstream myApp2 {
    least_conn;
    server srv1.example.com;
    server srv2.example.com;
    server srv3.example.com;
}

upstream myApp_HTTPS {
    ip_hash;
    server srv1.example.com;
    server srv2.example.com;
    server srv3.example.com;
}

upstream myApp_onlyone {
    server srv1.example.com;
    server srv2.example.com;
    server srv3.example.com;
}

# Correct access point
server {
    listen 80;
    server_name www.example.com;

    location /myApp1_root {
        proxy_pass http://myApp1;
    }
}

# Correct access point
server {
    listen 80;
    server_name www.onlyone.com;

    location /onlyone {
        proxy_pass http://myApp_onlyone;
    }
}

# Correct access point
server {
    listen 172.20.20.200:443 ssl;
    server_name inner.https.example.com;
    ssl_certificate inner.https.example.com.crt;
    ssl_certificate_key inner.https.example.com.key;

    location /myapp3_root {
        proxy_pass https://myApp_HTTPS;
    }
}

# Correct access point
server {
    listen 80;
    listen 443 ssl;
    server_name https.example.com;
    ssl_certificate https.example.com.crt;
    ssl_certificate_key https.example.com.key;

    location / {
        proxy_pass https://myApp_HTTPS;
    }

    location /myApp2_root {
        proxy_pass http://myApp2;
    }

    location /myApp2_root/myApp1_root {
        proxy_pass http://myApp1;
    }
}

# Incorrect access point, because it is duplicated: 
# the server name and the interface is the key of a server
server {
    listen 80;
    server_name www.example.com;

    location /myApp1_root {
        proxy_pass http://myApp1;
    }
}

# Incorrect access point, also because it is duplicated
server {
    listen 80;
    server_name www.example.com;

    location / {
        proxy_pass http://myApp1;
    }
}

# Incorrect access point
# Each line of this AP is incorrect
server {
    # By default, port 80 shall not be used for SSL, and port 443 shall use SSL
    listen 80 ssl;
    listen 443;
    # server_name shall not use 'localhost'
    server_name localhost;
    ssl_certificate example.com.crt;
    ssl_certificate_key example.com.key;

    # the upstream 'myapp_https' has been used as HTTPS in previous server,
    # can no longer be used as HTTP
    location / {
        proxy_pass http://myApp_HTTPS;
    }

    # the upstream 'myApp2' has been used as HTTP previously
    location /myApp2_root {
        proxy_pass https://myApp2;
    }

    # the upstream 'myApp1' has been used as HTTP previously
    location / {
        proxy_pass https://myApp1;
    }
}